 palMatrix4x4 & palBodyBase::GetLocationMatrix()
 palMatrix body_generic_get_location(palGenericBody*)
#float(16) get_location()

 void palBodyBase::GetPosition(palVector3 &pos)
 palVector3 body_generic_get_position(palGenericBody*)
#float(3) get_position()

#void palBodyBase::SetMaterial(palMaterial *material)
#void body_generic_set_material(palGenericBody*, palMaterial*)
#set_material(Material)

 palGroup palBodyBase::GetGroup()
 int body_generic_get_group(palGenericBody*)
#int get_group()

 void palBodyBase::SetGroup(palGroup group)
 void body_generic_set_group(palGenericBody*, int)
#get_group(int)

#Float palBodyBase::GetSkinWidth()
#float body_generic_get_skin_width(palGenericBody*)
#float get_skin_width()

#bool palBodyBase::SetSkinWidth(Float skinWidth)
#bool body_generic_set_skin_width(palGenericBody*, float)
#bool set_skin_width(float)

#std::string palBodyBase::toString()
 __str__()

 void palBody::SetPosition(Float x, Float y, Float z, Float roll, Float pitch, Float yaw)
 void body_generic_set_position(palGenericBody*, float, float, float, float, float, float)
 set_position(float(3), float(3))

 void palBody::SetOrientation(Float roll, Float pitch, Float yaw)
 void body_generic_set_orientation(palGenericBody*, float, float, float)
 set_orientation(float(3))

 void palBody::ApplyForce(Float fx, Float fy, Float fz)
 void body_generic_apply_force(palGenericBody*, float, float, float)
 apply_force(float(3))

 void palBody::ApplyTorque(Float tx, Float ty, Float tz)
 void body_generic_apply_torque(palGenericBody*, float, float, float)
 apply_torque(float(3))

 void palBody::ApplyForceAtPosition(Float px, Float py, Float pz, Float fx, Float fy, Float fz)
 void body_generic_apply_force_at_position(palGenericBody*, float, float, float, float, float, float)
 apply_force(float(3), float(3))

 void palBody::ApplyImpulse(Float ix, Float iy, Float iz)
 void body_generic_apply_impulse(palGenericBody*, float, float, float)
 apply_impulse(float(3))

 void palBody::ApplyAngularImpulse(Float ix, Float iy, Float iz)
 void body_generic_apply_angular_impulse(palGenericBody*, float, float, float)
 apply_angular_impulse(float(3))

 void palBody::ApplyImpulseAtPosition(Float px, Float py, Float pz, Float ix, Float iy, Float iz)
 void body_generic_apply_impulse_at_position(palGenericBody*, float, float, float, float, float, float)
 apply_impulse(float(3), float(3))

 void palBody::GetLinearVelocity(palVector3 &velocity)
 palVector3 body_generic_get_linear_velocity(palGenericBody*)
 float(3) get_linear_velocity()

 void palBody::GetAngularVelocity(palVector3 &velocity_rad)
 palVector3 body_generic_get_angular_velocity(palGenericBody*)
 float(3) get_angular_velocity()

 void palBody::SetLinearVelocity(const palVector3 &velocity)
 void body_generic_set_linear_velocity(palGenericBody*, Vector3)
 set_linear_velocity(float(3))

 void palBody::SetAngularVelocity(const palVector3 &velocity_rad)
 void body_generic_set_angular_velocity(palGenericBody*, Vector3)
 set_angular_velocity(float(3))

 bool palBody::IsActive()
 bool body_generic_is_active(palGenericBody*)
 bool is_active()

 void palBody::SetActive(bool active)
 void body_generic_is_active(palGenericBody*, bool)
 set_active(bool)



void palGenericBody::SetDynamicsType(palDynamicsType dynType)
void body_generic_set_dynamics_type(palGenericBody* g, char c)
    
void palGenericBody::SetGravityEnabled(bool enabled)
void body_generic_set_gravity_enabled(palGenericBody* g, bool e)
 
bool palGenericBody::IsGravityEnabled()
bool body_generic_is_gravity_enabled(palGenericBody* g)
 
void palGenericBody::SetCollisionResponseEnabled(bool enabled)
void body_generic_set_collision_response_enabled(palGenericBody* g, bool e)
 
bool palGenericBody::IsCollisionResponseEnabled()
bool body_generic_is_collision_response_enabled(palGenericBody* g)
 
void palGenericBody::SetMass(Float mass)
void body_generic_set_mass(palGenericBody* g, Float mass)
 
void palGenericBody::SetInertia(Float Ixx, Float Iyy, Float Izz)
void body_generic_set_inertia(palGenericBody* g, Float x, Float y, Float z)
 
void palGenericBody::GetInertia(Float &Ixx, Float &Iyy, Float &Izz)
void body_generic_get_inertia(palGenericBody* g, Float &x, Float &y, Float &z)
 
void palGenericBody::SetLinearDamping(Float)
void body_generic_set_linear_damping(palGenericBody* g, Float linear_damping)
 
Float palGenericBody::GetLinearDamping()
Float body_generic_get_linear_damping(palGenericBody* g)
 
void palGenericBody::SetAngularDamping(Float)
void body_generic_set_angular_damping(palGenericBody* g, Float angular_damping)
 
Float palGenericBody::GetAngularDamping()
Float body_generic_get_angular_damping(palGenericBody* g)
 
#void palGenericBody::SetMaxAngularVelocity(Float maxAngVel)
 
#Float palGenericBody::GetMaxAngularVelocity()
 
void palGenericBody::ConnectGeometry(palGeometry *pGeom)
void body_generic_connect_geometry(palGenericBody* g,palGeometry*geom, char typechar)
 
#const PAL_VECTOR< palGeometry * > &  palGenericBody::GetGeometries()
 
#unsigned int palGenericBody::GetNumGeometries()
 
void palGenericBody::RemoveGeometry(palGeometry *pGeom)
void body_generic_remove_geometry(palGenericBody* g,palGeometry*geom, char typechar)
 
#bool palGenericBody::IsDynamic()
 
#bool palGenericBody::IsKinematic()
 
#bool palGenericBody::IsStatic()
 
#palDynamicsType  palGenericBody::GetDynamicsType()

void palGenericBody::Init(palMatrix4x4)
palGenericBody* create_generic(Float x, Float y, Float z, Float rx, Float ry, Float rz)